// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"kratos-demo/internal/client/order"
	"kratos-demo/internal/conf"
	"kratos-demo/internal/registrar"
	order3 "kratos-demo/internal/server/order"
	order2 "kratos-demo/internal/service/order"
)

import (
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(server *conf.Server, data *conf.Data, confRegistrar *conf.Registrar, logger log.Logger) (*kratos.App, func(), error) {
	registry, err := registrar.NewNacos(confRegistrar, logger)
	if err != nil {
		return nil, nil, err
	}
	grpcClient, cleanup, err := order.NewGRPCClient(server, registry, logger)
	if err != nil {
		return nil, nil, err
	}
	orderService := order2.NewOrderService(grpcClient)
	grpcServer := order3.NewGRPCServer(server, orderService, logger)
	httpServer := order3.NewHTTPServer(server, orderService, logger)
	app := newApp(logger, grpcServer, registry, httpServer)
	return app, func() {
		cleanup()
	}, nil
}
